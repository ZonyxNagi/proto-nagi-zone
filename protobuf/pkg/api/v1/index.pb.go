// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/v1/index.proto

// This document describes the Nagi Zone API.
// It is used to generate the API documentation and client libraries.

package _go

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Lap
//
// Lap is a single lap in a swimming session.
type Lap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// start_time is the start time of the lap.
	// This is the time when the lap started, in milliseconds since epoch.
	StartTime uint64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// end_time is the end time of the lap.
	// This is the time when the lap ended, in milliseconds since epoch.
	EndTime uint64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// duration is the duration of the lap.
	// This is the time spent swimming the lap, in milliseconds.
	Duration uint32 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// distance is the distance of the lap.
	// This is the distance swum during the lap, in meters.
	Distance      uint32 `protobuf:"varint,4,opt,name=distance,proto3" json:"distance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lap) Reset() {
	*x = Lap{}
	mi := &file_api_proto_v1_index_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lap) ProtoMessage() {}

func (x *Lap) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lap.ProtoReflect.Descriptor instead.
func (*Lap) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{0}
}

func (x *Lap) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Lap) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Lap) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Lap) GetDistance() uint32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

// Session
//
// Session is a single swimming session for a user.
type Session struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id is the ID of the session.
	// This is the ID of the session in the system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// facility_id is the ID of the facility.
	// This is the ID of the facility where the session took place.
	FacilityId string `protobuf:"bytes,2,opt,name=facility_id,json=facilityId,proto3" json:"facility_id,omitempty"`
	// pool_id is the ID of the pool.
	// This is the ID of the swimming pool where the session took place.
	PoolId string `protobuf:"bytes,3,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// tag_id is the ID of the tag.
	// This is the ID of the tag used to identify the user in the Quupa system.
	TagId string `protobuf:"bytes,4,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// device_id is the ID to link the session to a user. (wristband/card)
	// This is used to link the session to a user in the system.
	DeviceId string `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// date is the date of the session in ISO 8601 format.
	// For example: "2023-05-23T14:30:00Z"
	Date string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	// start_time is the start time of the session.
	// This is the time when the session started, in milliseconds since epoch.
	StartTime uint64 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// end_time is the end time of the session.
	// This is the time when the session ended, in milliseconds since epoch.
	EndTime uint64 `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// duration is the duration of the session.
	// This is the time spent swimming and resting, in milliseconds.
	Duration uint32 `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	// swim_time is the swim time of the session.
	// This is the time spent swimming, in milliseconds.
	SwimTime uint32 `protobuf:"varint,10,opt,name=swim_time,json=swimTime,proto3" json:"swim_time,omitempty"`
	// rest_time is the rest time of the session.
	// This is the time spent resting, in milliseconds.
	RestTime uint32 `protobuf:"varint,11,opt,name=rest_time,json=restTime,proto3" json:"rest_time,omitempty"`
	// distance is the distance of the session.
	// This is the distance swum during the session, in meters.
	Distance uint32 `protobuf:"varint,12,opt,name=distance,proto3" json:"distance,omitempty"`
	// pace is the pace of the session.
	// This is the average pace of the session, in seconds per 100 meters.
	Pace float32 `protobuf:"fixed32,13,opt,name=pace,proto3" json:"pace,omitempty"`
	// laps is the laps of the session.
	// This is the laps swum during the session.
	Laps          []*Lap `protobuf:"bytes,14,rep,name=laps,proto3" json:"laps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_api_proto_v1_index_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{1}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetFacilityId() string {
	if x != nil {
		return x.FacilityId
	}
	return ""
}

func (x *Session) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *Session) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *Session) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Session) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Session) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Session) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Session) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Session) GetSwimTime() uint32 {
	if x != nil {
		return x.SwimTime
	}
	return 0
}

func (x *Session) GetRestTime() uint32 {
	if x != nil {
		return x.RestTime
	}
	return 0
}

func (x *Session) GetDistance() uint32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Session) GetPace() float32 {
	if x != nil {
		return x.Pace
	}
	return 0
}

func (x *Session) GetLaps() []*Lap {
	if x != nil {
		return x.Laps
	}
	return nil
}

// PrivacyPolicy
//
// PrivacyPolicy is the privacy policy accepted by the user.
type PrivacyPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// version is the current version of the privacy policy.
	// This is the version of the privacy policy accepted by the user.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// policy_date is the date when the privacy policy was created.
	// This is the date when the privacy policy was created, in milliseconds since epoch.
	PolicyDate uint64 `protobuf:"varint,2,opt,name=policy_date,json=policyDate,proto3" json:"policy_date,omitempty"`
	// business_communications is the acceptance of business communications.
	// This is the acceptance of business communications to the user.
	BusinessCommunications bool `protobuf:"varint,3,opt,name=business_communications,json=businessCommunications,proto3" json:"business_communications,omitempty"`
	// marketing_segmentation is the acceptance of marketing segmentation.
	// This is the acceptance of marketing segmentation for business purposes.
	MarketingSegmentation bool `protobuf:"varint,4,opt,name=marketing_segmentation,json=marketingSegmentation,proto3" json:"marketing_segmentation,omitempty"`
	// data_transfer is the acceptance of data transfer to third parties.
	// This is the acceptance of data transfer to third parties for business purposes.
	DataTransfer  bool `protobuf:"varint,5,opt,name=data_transfer,json=dataTransfer,proto3" json:"data_transfer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivacyPolicy) Reset() {
	*x = PrivacyPolicy{}
	mi := &file_api_proto_v1_index_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivacyPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivacyPolicy) ProtoMessage() {}

func (x *PrivacyPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivacyPolicy.ProtoReflect.Descriptor instead.
func (*PrivacyPolicy) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{2}
}

func (x *PrivacyPolicy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PrivacyPolicy) GetPolicyDate() uint64 {
	if x != nil {
		return x.PolicyDate
	}
	return 0
}

func (x *PrivacyPolicy) GetBusinessCommunications() bool {
	if x != nil {
		return x.BusinessCommunications
	}
	return false
}

func (x *PrivacyPolicy) GetMarketingSegmentation() bool {
	if x != nil {
		return x.MarketingSegmentation
	}
	return false
}

func (x *PrivacyPolicy) GetDataTransfer() bool {
	if x != nil {
		return x.DataTransfer
	}
	return false
}

// User
//
// User represents a user in the system.
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id is the ID of the user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name is the name of the user.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// email is the email address of the user.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// photo is the photo of the user.
	// This is the URL of the photo of the user.
	Photo string `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	// privacy_policies is the list of privacy policies accepted by the user.
	// This is the list of privacy policies accepted by the user.
	PrivacyPolicies []*PrivacyPolicy `protobuf:"bytes,5,rep,name=privacy_policies,json=privacyPolicies,proto3" json:"privacy_policies,omitempty"`
	// device_ids is the list of link IDs for the user. (wristband/card)
	// This is the list of link IDs for the user in the system.
	DeviceIds     []string `protobuf:"bytes,6,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_api_proto_v1_index_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *User) GetPrivacyPolicies() []*PrivacyPolicy {
	if x != nil {
		return x.PrivacyPolicies
	}
	return nil
}

func (x *User) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

// Stats
//
// Stats is the swimming stats for a user during a date range.
type Stats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// distance is the total distance swum, in meters.
	Distance uint32 `protobuf:"varint,1,opt,name=distance,proto3" json:"distance,omitempty"`
	// duration is the total duration of the sessions, in milliseconds.
	Duration uint32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	// pace is the average pace of the sessions, in seconds per 100 meters.
	Pace float32 `protobuf:"fixed32,3,opt,name=pace,proto3" json:"pace,omitempty"`
	// laps is the number of laps swum for all sessions.
	Laps          uint32 `protobuf:"varint,4,opt,name=laps,proto3" json:"laps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stats) Reset() {
	*x = Stats{}
	mi := &file_api_proto_v1_index_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{4}
}

func (x *Stats) GetDistance() uint32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Stats) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Stats) GetPace() float32 {
	if x != nil {
		return x.Pace
	}
	return 0
}

func (x *Stats) GetLaps() uint32 {
	if x != nil {
		return x.Laps
	}
	return 0
}

// CreateUserRequest
//
// CreateUserRequest is the request message for creating a new user.
type CreateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name is the name of the user.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// email is the email address of the user.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// photo is the photo of the user.
	Photo         string `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_api_proto_v1_index_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserRequest) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

// CreateUserResponse
//
// CreateUserResponse returns the created user.
type CreateUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// success indicates if the user creation was successful.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	mi := &file_api_proto_v1_index_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetUserRequest
//
// GetUserRequest is the request message for getting a user.
type GetUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_id is the ID of the user to get.
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_api_proto_v1_index_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// GetUserResponse
//
// GetUserResponse returns the requested user.
type GetUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user is the requested user.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_api_proto_v1_index_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// UpdateUserRequest
//
// UpdateUserRequest is the request message for updating a user.
type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_id is the ID of the user to identify it.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// name is the new name of the user.
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// email is the new email address of the user.
	Email *string `protobuf:"bytes,3,opt,name=email,proto3,oneof" json:"email,omitempty"`
	// photo is the new photo of the user.
	Photo *string `protobuf:"bytes,4,opt,name=photo,proto3,oneof" json:"photo,omitempty"`
	// privacy_policy is the new privacy policies accepted by the user.
	PrivacyPolicy *PrivacyPolicy `protobuf:"bytes,5,opt,name=privacy_policy,json=privacyPolicy,proto3,oneof" json:"privacy_policy,omitempty"`
	// owner_ids is the new list of link IDs for the user.
	// This is the new list of link IDs for the user in the system.
	OwnerIds      []string `protobuf:"bytes,6,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_api_proto_v1_index_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateUserRequest) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *UpdateUserRequest) GetPhoto() string {
	if x != nil && x.Photo != nil {
		return *x.Photo
	}
	return ""
}

func (x *UpdateUserRequest) GetPrivacyPolicy() *PrivacyPolicy {
	if x != nil {
		return x.PrivacyPolicy
	}
	return nil
}

func (x *UpdateUserRequest) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

// UpdateUserResponse
//
// UpdateUserResponse returns if the user update was successful or not.
type UpdateUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// success indicates if the update was successful.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_api_proto_v1_index_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DeleteUserRequest
//
// DeleteUserRequest is the request message for deleting a user.
type DeleteUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_id is the ID of the user to delete.
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_api_proto_v1_index_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// DeleteUserResponse
//
// DeleteUserResponse returns if the user deletion was successful.
type DeleteUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// success indicates if the deletion was successful.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	mi := &file_api_proto_v1_index_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ListSessionsRequest
//
// ListSessionsRequest is the request message for listing sessions.
type ListSessionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_id is the ID of the user to get sessions for.
	// This is the ID of the user in the system.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// start_date is the start date for the sessions range in ISO 8601 format.
	// For example: "2023-05-01"
	StartDate *string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	// end_date is the end date for the sessions range in ISO 8601 format.
	// For example: "2023-05-31"
	EndDate *string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	// The offset is the value to use in the next request to continue receiving sessions.
	// This is used for pagination.
	Offset *string `protobuf:"bytes,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	// The limit is the maximum number of sessions to return.
	// This is used for pagination.
	Limit         *uint32 `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	mi := &file_api_proto_v1_index_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{13}
}

func (x *ListSessionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListSessionsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListSessionsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListSessionsRequest) GetOffset() string {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return ""
}

func (x *ListSessionsRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

// ListSessionsResponse
//
// ListSessionsResponse returns a list of sessions for the user.
// The list is paginated, and the offset is used to continue receiving sessions.
type ListSessionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sessions is the list of sessions for the user.
	// This is a list of Session objects.
	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	// offset is the value to use in the next request to continue receiving sessions.
	// This is used for pagination.
	Offset        string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	mi := &file_api_proto_v1_index_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{14}
}

func (x *ListSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListSessionsResponse) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

// GetStatsRequest
//
// GetStatsRequest is the request message for getting stats for a user.
type GetStatsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_id is the ID of the user to get stats for.
	// This is the ID of the user in the system.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// start_date is the start date for the stats range in ISO 8601 format.
	// For example: "2023-05-01"
	StartDate *string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	// end_date is the end date for the stats range in ISO 8601 format.
	// For example: "2023-05-31"
	EndDate       *string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	mi := &file_api_proto_v1_index_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{15}
}

func (x *GetStatsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetStatsRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *GetStatsRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

// GetStatsResponse
//
// GetStatsResponse returns the swimming stats for a user.
type GetStatsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// stats is the swimming stats for the user in the requested date range.
	Stats         *Stats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatsResponse) Reset() {
	*x = GetStatsResponse{}
	mi := &file_api_proto_v1_index_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResponse) ProtoMessage() {}

func (x *GetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_index_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_index_proto_rawDescGZIP(), []int{16}
}

func (x *GetStatsResponse) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

var File_api_proto_v1_index_proto protoreflect.FileDescriptor

const file_api_proto_v1_index_proto_rawDesc = "" +
	"\n" +
	"\x18api/proto/v1/index.proto\x12\fnagi.zone.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1bbuf/validate/validate.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x9b\x01\n" +
	"\x03Lap\x12&\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x04B\a\xbaH\x042\x02 \x00R\tstartTime\x12\"\n" +
	"\bend_time\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\aendTime\x12#\n" +
	"\bduration\x18\x03 \x01(\rB\a\xbaH\x04*\x02 \x00R\bduration\x12#\n" +
	"\bdistance\x18\x04 \x01(\rB\a\xbaH\x04*\x02 \x00R\bdistance\"\xd2\x04\n" +
	"\aSession\x12\x19\n" +
	"\x02id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x02id\x12*\n" +
	"\vfacility_id\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\n" +
	"facilityId\x12\"\n" +
	"\apool_id\x18\x03 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x06poolId\x12 \n" +
	"\x06tag_id\x18\x04 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x05tagId\x12&\n" +
	"\tdevice_id\x18\x05 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\bdeviceId\x12_\n" +
	"\x04date\x18\x06 \x01(\tBK\xbaHHrF2D^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})$R\x04date\x12&\n" +
	"\n" +
	"start_time\x18\a \x01(\x04B\a\xbaH\x042\x02 \x00R\tstartTime\x12\"\n" +
	"\bend_time\x18\b \x01(\x04B\a\xbaH\x042\x02 \x00R\aendTime\x12#\n" +
	"\bduration\x18\t \x01(\rB\a\xbaH\x04*\x02 \x00R\bduration\x12$\n" +
	"\tswim_time\x18\n" +
	" \x01(\rB\a\xbaH\x04*\x02 \x00R\bswimTime\x12$\n" +
	"\trest_time\x18\v \x01(\rB\a\xbaH\x04*\x02 \x00R\brestTime\x12#\n" +
	"\bdistance\x18\f \x01(\rB\a\xbaH\x04*\x02 \x00R\bdistance\x12\x1e\n" +
	"\x04pace\x18\r \x01(\x02B\n" +
	"\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\x04pace\x12/\n" +
	"\x04laps\x18\x0e \x03(\v2\x11.nagi.zone.v1.LapB\b\xbaH\x05\x92\x01\x02\b\x01R\x04laps\"\xf3\x01\n" +
	"\rPrivacyPolicy\x12#\n" +
	"\aversion\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18\x03R\aversion\x12(\n" +
	"\vpolicy_date\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"policyDate\x127\n" +
	"\x17business_communications\x18\x03 \x01(\bR\x16businessCommunications\x125\n" +
	"\x16marketing_segmentation\x18\x04 \x01(\bR\x15marketingSegmentation\x12#\n" +
	"\rdata_transfer\x18\x05 \x01(\bR\fdataTransfer\"\xf8\x01\n" +
	"\x04User\x12\x19\n" +
	"\x02id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x02id\x12\x1d\n" +
	"\x04name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x04name\x12\x1d\n" +
	"\x05email\x18\x03 \x01(\tB\a\xbaH\x04r\x02`\x01R\x05email\x12 \n" +
	"\x05photo\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\x01R\x05photo\x12F\n" +
	"\x10privacy_policies\x18\x05 \x03(\v2\x1b.nagi.zone.v1.PrivacyPolicyR\x0fprivacyPolicies\x12-\n" +
	"\n" +
	"device_ids\x18\x06 \x03(\tB\x0e\xbaH\v\x92\x01\b\"\x06r\x04\x10\x06\x18@R\tdeviceIds\"\x8e\x01\n" +
	"\x05Stats\x12#\n" +
	"\bdistance\x18\x01 \x01(\rB\a\xbaH\x04*\x02(\x00R\bdistance\x12#\n" +
	"\bduration\x18\x02 \x01(\rB\a\xbaH\x04*\x02(\x00R\bduration\x12\x1e\n" +
	"\x04pace\x18\x03 \x01(\x02B\n" +
	"\xbaH\a\n" +
	"\x05-\x00\x00\x00\x00R\x04pace\x12\x1b\n" +
	"\x04laps\x18\x04 \x01(\rB\a\xbaH\x04*\x02(\x00R\x04laps\"\x8e\x01\n" +
	"\x11CreateUserRequest\x12\x19\n" +
	"\x02id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x02id\x12\x1d\n" +
	"\x04name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x04name\x12\x1d\n" +
	"\x05email\x18\x03 \x01(\tB\a\xbaH\x04r\x02`\x01R\x05email\x12 \n" +
	"\x05photo\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\x01R\x05photo\".\n" +
	"\x12CreateUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"4\n" +
	"\x0eGetUserRequest\x12\"\n" +
	"\auser_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x06userId\"9\n" +
	"\x0fGetUserResponse\x12&\n" +
	"\x04user\x18\x01 \x01(\v2\x12.nagi.zone.v1.UserR\x04user\"\xcd\x02\n" +
	"\x11UpdateUserRequest\x12\"\n" +
	"\auser_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x06userId\x12\"\n" +
	"\x04name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 H\x00R\x04name\x88\x01\x01\x12\"\n" +
	"\x05email\x18\x03 \x01(\tB\a\xbaH\x04r\x02`\x01H\x01R\x05email\x88\x01\x01\x12%\n" +
	"\x05photo\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\x01H\x02R\x05photo\x88\x01\x01\x12G\n" +
	"\x0eprivacy_policy\x18\x05 \x01(\v2\x1b.nagi.zone.v1.PrivacyPolicyH\x03R\rprivacyPolicy\x88\x01\x01\x12,\n" +
	"\towner_ids\x18\x06 \x03(\tB\x0f\xbaH\f\x92\x01\t\"\ar\x05\x10\x01\x18\x80\x01R\bownerIdsB\a\n" +
	"\x05_nameB\b\n" +
	"\x06_emailB\b\n" +
	"\x06_photoB\x11\n" +
	"\x0f_privacy_policy\".\n" +
	"\x12UpdateUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"7\n" +
	"\x11DeleteUserRequest\x12\"\n" +
	"\auser_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x06userId\".\n" +
	"\x12DeleteUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xb4\x02\n" +
	"\x13ListSessionsRequest\x12\"\n" +
	"\auser_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x06userId\x12>\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$H\x00R\tstartDate\x88\x01\x01\x12:\n" +
	"\bend_date\x18\x03 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$H\x01R\aendDate\x88\x01\x01\x12&\n" +
	"\x06offset\x18\x04 \x01(\tB\t\xbaH\x06r\x04\x10\x03\x18@H\x02R\x06offset\x88\x01\x01\x12$\n" +
	"\x05limit\x18\x05 \x01(\rB\t\xbaH\x06*\x04\x182 \x00H\x03R\x05limit\x88\x01\x01B\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_dateB\t\n" +
	"\a_offsetB\b\n" +
	"\x06_limit\"a\n" +
	"\x14ListSessionsResponse\x121\n" +
	"\bsessions\x18\x01 \x03(\v2\x15.nagi.zone.v1.SessionR\bsessions\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\tR\x06offset\"\xcd\x01\n" +
	"\x0fGetStatsRequest\x12\"\n" +
	"\auser_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x06userId\x12>\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$H\x00R\tstartDate\x88\x01\x01\x12:\n" +
	"\bend_date\x18\x03 \x01(\tB\x1a\xbaH\x17r\x152\x13^\\d{4}-\\d{2}-\\d{2}$H\x01R\aendDate\x88\x01\x01B\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_date\"=\n" +
	"\x10GetStatsResponse\x12)\n" +
	"\x05stats\x18\x01 \x01(\v2\x13.nagi.zone.v1.StatsR\x05stats2\xaf\x03\n" +
	"\fUsersService\x12a\n" +
	"\n" +
	"CreateUser\x12\x1f.nagi.zone.v1.CreateUserRequest\x1a .nagi.zone.v1.CreateUserResponse\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\"\b/v1/user\x12b\n" +
	"\aGetUser\x12\x1c.nagi.zone.v1.GetUserRequest\x1a\x1d.nagi.zone.v1.GetUserResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/user/{user_id}\x12k\n" +
	"\n" +
	"UpdateUser\x12\x1f.nagi.zone.v1.UpdateUserRequest\x1a .nagi.zone.v1.UpdateUserResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x1a\x12/v1/user/{user_id}\x12k\n" +
	"\n" +
	"DeleteUser\x12\x1f.nagi.zone.v1.DeleteUserRequest\x1a .nagi.zone.v1.DeleteUserResponse\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/v1/user/{user_id}2\x8d\x01\n" +
	"\x0fSessionsService\x12z\n" +
	"\fListSessions\x12!.nagi.zone.v1.ListSessionsRequest\x1a\".nagi.zone.v1.ListSessionsResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/user/{user_id}/sessions2{\n" +
	"\fStatsService\x12k\n" +
	"\bGetStats\x12\x1d.nagi.zone.v1.GetStatsRequest\x1a\x1e.nagi.zone.v1.GetStatsResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v1/user/{user_id}/statsB\xeb\x01\x92Ap\x12G\n" +
	"\rNagi Zone API\"/\n" +
	"\n" +
	"Zonyx Nagi\x12\x0fhttps://nagi.es\x1a\x10develop@nagi.com2\x051.0.0*\x01\x022\x10application/json:\x10application/json\n" +
	"\x10com.nagi.zone.v1B\n" +
	"IndexProtoP\x01Z\x06gen/go\xa2\x02\x03NZX\xaa\x02\fNagi.Zone.V1\xca\x02\fNagi\\Zone\\V1\xe2\x02\x18Nagi\\Zone\\V1\\GPBMetadata\xea\x02\x0eNagi::Zone::V1b\x06proto3"

var (
	file_api_proto_v1_index_proto_rawDescOnce sync.Once
	file_api_proto_v1_index_proto_rawDescData []byte
)

func file_api_proto_v1_index_proto_rawDescGZIP() []byte {
	file_api_proto_v1_index_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_index_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_index_proto_rawDesc), len(file_api_proto_v1_index_proto_rawDesc)))
	})
	return file_api_proto_v1_index_proto_rawDescData
}

var file_api_proto_v1_index_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_proto_v1_index_proto_goTypes = []any{
	(*Lap)(nil),                  // 0: nagi.zone.v1.Lap
	(*Session)(nil),              // 1: nagi.zone.v1.Session
	(*PrivacyPolicy)(nil),        // 2: nagi.zone.v1.PrivacyPolicy
	(*User)(nil),                 // 3: nagi.zone.v1.User
	(*Stats)(nil),                // 4: nagi.zone.v1.Stats
	(*CreateUserRequest)(nil),    // 5: nagi.zone.v1.CreateUserRequest
	(*CreateUserResponse)(nil),   // 6: nagi.zone.v1.CreateUserResponse
	(*GetUserRequest)(nil),       // 7: nagi.zone.v1.GetUserRequest
	(*GetUserResponse)(nil),      // 8: nagi.zone.v1.GetUserResponse
	(*UpdateUserRequest)(nil),    // 9: nagi.zone.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),   // 10: nagi.zone.v1.UpdateUserResponse
	(*DeleteUserRequest)(nil),    // 11: nagi.zone.v1.DeleteUserRequest
	(*DeleteUserResponse)(nil),   // 12: nagi.zone.v1.DeleteUserResponse
	(*ListSessionsRequest)(nil),  // 13: nagi.zone.v1.ListSessionsRequest
	(*ListSessionsResponse)(nil), // 14: nagi.zone.v1.ListSessionsResponse
	(*GetStatsRequest)(nil),      // 15: nagi.zone.v1.GetStatsRequest
	(*GetStatsResponse)(nil),     // 16: nagi.zone.v1.GetStatsResponse
}
var file_api_proto_v1_index_proto_depIdxs = []int32{
	0,  // 0: nagi.zone.v1.Session.laps:type_name -> nagi.zone.v1.Lap
	2,  // 1: nagi.zone.v1.User.privacy_policies:type_name -> nagi.zone.v1.PrivacyPolicy
	3,  // 2: nagi.zone.v1.GetUserResponse.user:type_name -> nagi.zone.v1.User
	2,  // 3: nagi.zone.v1.UpdateUserRequest.privacy_policy:type_name -> nagi.zone.v1.PrivacyPolicy
	1,  // 4: nagi.zone.v1.ListSessionsResponse.sessions:type_name -> nagi.zone.v1.Session
	4,  // 5: nagi.zone.v1.GetStatsResponse.stats:type_name -> nagi.zone.v1.Stats
	5,  // 6: nagi.zone.v1.UsersService.CreateUser:input_type -> nagi.zone.v1.CreateUserRequest
	7,  // 7: nagi.zone.v1.UsersService.GetUser:input_type -> nagi.zone.v1.GetUserRequest
	9,  // 8: nagi.zone.v1.UsersService.UpdateUser:input_type -> nagi.zone.v1.UpdateUserRequest
	11, // 9: nagi.zone.v1.UsersService.DeleteUser:input_type -> nagi.zone.v1.DeleteUserRequest
	13, // 10: nagi.zone.v1.SessionsService.ListSessions:input_type -> nagi.zone.v1.ListSessionsRequest
	15, // 11: nagi.zone.v1.StatsService.GetStats:input_type -> nagi.zone.v1.GetStatsRequest
	6,  // 12: nagi.zone.v1.UsersService.CreateUser:output_type -> nagi.zone.v1.CreateUserResponse
	8,  // 13: nagi.zone.v1.UsersService.GetUser:output_type -> nagi.zone.v1.GetUserResponse
	10, // 14: nagi.zone.v1.UsersService.UpdateUser:output_type -> nagi.zone.v1.UpdateUserResponse
	12, // 15: nagi.zone.v1.UsersService.DeleteUser:output_type -> nagi.zone.v1.DeleteUserResponse
	14, // 16: nagi.zone.v1.SessionsService.ListSessions:output_type -> nagi.zone.v1.ListSessionsResponse
	16, // 17: nagi.zone.v1.StatsService.GetStats:output_type -> nagi.zone.v1.GetStatsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_proto_v1_index_proto_init() }
func file_api_proto_v1_index_proto_init() {
	if File_api_proto_v1_index_proto != nil {
		return
	}
	file_api_proto_v1_index_proto_msgTypes[9].OneofWrappers = []any{}
	file_api_proto_v1_index_proto_msgTypes[13].OneofWrappers = []any{}
	file_api_proto_v1_index_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_index_proto_rawDesc), len(file_api_proto_v1_index_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_proto_v1_index_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_index_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_index_proto_msgTypes,
	}.Build()
	File_api_proto_v1_index_proto = out.File
	file_api_proto_v1_index_proto_goTypes = nil
	file_api_proto_v1_index_proto_depIdxs = nil
}
